#include <bits/stdc++.h>
using namespace std;

#define LLI long long int
/*
1
4 6
4 1 2
2 1 3 1 4

1
4 3
10 10 10
6 6

2
4 6
4 1 2
2 1 3 1 4
4 3
10 10 10
6 6

1
83 99
24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24
34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34

1
63 32
7 69 87 54 1 27 92 58 24 86 16 18 14 68 65 24 37 66 78 14 27 72 23 65 9 43 45 3 7 59 33 66 28 20 20 29 99 12 39 23 51 55 94 17 23 11 93 60 77 72 26 57 96 2 22 58 45 68 61 4 27 47
70 7 19 42 36 19 7 27 94 58 82 40 27 57 51 21 69 81 93 96 38 41 50 60 99 47 28 61 52 7 60

5
63 32
7 69 87 54 1 27 92 58 24 86 16 18 14 68 65 24 37 66 78 14 27 72 23 65 9 43 45 3 7 59 33 66 28 20 20 29 99 12 39 23 51 55 94 17 23 11 93 60 77 72 26 57 96 2 22 58 45 68 61 4 27 47
70 7 19 42 36 19 7 27 94 58 82 40 27 57 51 21 69 81 93 96 38 41 50 60 99 47 28 61 52 7 60
81 19
66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66 66
54 54 54 54 54 54 54 54 54 54 54 54 54 54 54 54 54 54
83 99
24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24 24
34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34
39 63
72 41 82 42 22 27 90 60 69 40 72 20 87 53 81 91 60 93 66 79 25 35 33 75 11 15 24 45 30 14 58 3 55 41 45 29 20 87
89 41 27 13 62 66 66 95 10 79 41 28 58 66 63 91 93 74 58 18 71 41 32 29 44 39 22 41 68 43 28 9 36 7 22 50 25 89 98 35 20 39 63 78 5 78 21 98 52 80 68 75 21 52 5 17 91 27 10 11 22 38
99 49
11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11
61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61 61

*/

int main(){
	
	LLI q,m,n;
	vector<LLI> cost_x;
	vector<LLI> cost_y;
	vector<LLI> val;
	
	cin >> q;
	for(LLI z=0;z<q;z++){
		// m -> row
		// n -> column
		cin >> m >> n;
		/*baris*/
		for(LLI i=0;i<m-1;i++){
			LLI temp;
			cin >> temp;
			cost_x.push_back(temp);
		}
		/*kolom*/
		for(LLI j=0;j<n-1;j++){
			LLI temp;
			cin >> temp;
			cost_y.push_back(temp);
		}
		sort(cost_x.begin(),cost_x.end(),greater <>());
		sort(cost_y.begin(),cost_y.end(),greater <>());
		
		LLI sv=1,sh=1;
		LLI pl = 1;
		LLI i=0,j=0;
		LLI cost = 0;
		while(i<max(m,n)-1 || j<min(m,n)-1){
			if(m>=n){
				if(cost_x[i] >= cost_y[j] && i<m-1){
					cost += cost_x[i]*sv;
//					cout << "kk " << cost << "\n";
					sh++;
					i++;
				}else{
					cost += cost_y[j]*sh;
//					cout << "NN " << cost << "\n";;
					sv++;
					j++;
				}
			}else{
				if(cost_y[i] >= cost_x[j] && i<n-1){
					cost += cost_y[i]*sv;
					sh++;
					i++;
				}else{
					cost += cost_x[j]*sh;
					sv++;
					j++;
				}
			}
			
		}
//		if(m>=n)cost += cost_y[j]*sh;
//		else cost += cost_x[j]*sh;
//		cout << cost << "\n";
		LLI tempval = cost%(1000000007);
		val.push_back(tempval);
		cost = 0;
		cost_x.clear();
		cost_y.clear();
	}
	
	for(LLI i=0;i<val.size();i++){
		cout << val[i] << "\n";
	}
	
	return 0;
}



